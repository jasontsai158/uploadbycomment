{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/courses\";\nclass CourseService {\n  post(title, description, price) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.post(API_URL, {\n      title,\n      description,\n      price\n    }, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n  /*/\r\n    getEnrolledCourses(_id) {\r\n      let token;\r\n      if (localStorage.getItem(\"user\")) {\r\n        token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n      } else {\r\n        token = \"\";\r\n      }\r\n  \r\n      return axios.get(API_URL + \"/student/\" + _id, {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      });\r\n    }\r\n  \r\n    getCourseByName(name) {\r\n      let token;\r\n      if (localStorage.getItem(\"user\")) {\r\n        token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n      } else {\r\n        token = \"\";\r\n      }\r\n  \r\n      return axios.get(API_URL + \"/findByName/\" + name, {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      });\r\n    }\r\n  /*/\n  get(_id) {\n    let token;\n    if (localStorage.getItem(\"user\")) {\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\n    } else {\n      token = \"\";\n    }\n    return axios.get(API_URL + \"/instructor/\" + _id, {\n      headers: {\n        Authorization: token\n      }\n    });\n  }\n}\n/*/\r\n  enroll(_id, user_id) {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n\r\n    return axios.post(\r\n      API_URL + \"/enroll/\" + _id,\r\n      { user_id },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n/*/\nexport default new CourseService();\n\n/*/\r\nclass CourseService {\r\n    post(title, description, price) {\r\n        let token;\r\n        if(localStorage.getItem(\"user\")) {\r\n            token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n        }else {\r\n            token = \"\";\r\n        }\r\n        return axios.post(API_URL, { title, description, price }, { \r\n            headers: {\r\n                Authorization: token,\r\n            },\r\n        });\r\n\r\n    }\r\n    get(_id) {\r\n        let token;\r\n        if(localStorage.getItem(\"user\")) {\r\n            token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n        }else {\r\n            token = \"\";\r\n        }\r\n        return axios.get(API_URL + \"/instructor/\" + _id, {\r\n            headers: {\r\n                Authorization: token,\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport default new CourseService();\r\n/*/","map":{"version":3,"names":["axios","API_URL","CourseService","post","title","description","price","token","localStorage","getItem","JSON","parse","headers","Authorization","get","_id"],"sources":["C:/Jason Data/軟体課程/全端課程/Project7_all_system_client_server/P7_Learning/client/src/services/course.service.js"],"sourcesContent":["import axios from \"axios\";\r\nconst API_URL = \"http://localhost:8080/api/courses\";\r\n\r\nclass CourseService {\r\n  post(title, description, price) {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n\r\n    return axios.post(\r\n      API_URL,\r\n      { title, description, price },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      }\r\n    );\r\n  }\r\n/*/\r\n  getEnrolledCourses(_id) {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n\r\n    return axios.get(API_URL + \"/student/\" + _id, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n  }\r\n\r\n  getCourseByName(name) {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n\r\n    return axios.get(API_URL + \"/findByName/\" + name, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n  }\r\n/*/\r\n  get(_id) {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n    return axios.get(API_URL + \"/instructor/\" + _id, {\r\n      headers: {\r\n        Authorization: token,\r\n      },\r\n    });\r\n  }\r\n}\r\n/*/\r\n  enroll(_id, user_id) {\r\n    let token;\r\n    if (localStorage.getItem(\"user\")) {\r\n      token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n    } else {\r\n      token = \"\";\r\n    }\r\n\r\n    return axios.post(\r\n      API_URL + \"/enroll/\" + _id,\r\n      { user_id },\r\n      {\r\n        headers: {\r\n          Authorization: token,\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n/*/\r\nexport default new CourseService();\r\n\r\n  \r\n/*/\r\nclass CourseService {\r\n    post(title, description, price) {\r\n        let token;\r\n        if(localStorage.getItem(\"user\")) {\r\n            token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n        }else {\r\n            token = \"\";\r\n        }\r\n        return axios.post(API_URL, { title, description, price }, { \r\n            headers: {\r\n                Authorization: token,\r\n            },\r\n        });\r\n\r\n    }\r\n    get(_id) {\r\n        let token;\r\n        if(localStorage.getItem(\"user\")) {\r\n            token = JSON.parse(localStorage.getItem(\"user\")).token;\r\n        }else {\r\n            token = \"\";\r\n        }\r\n        return axios.get(API_URL + \"/instructor/\" + _id, {\r\n            headers: {\r\n                Authorization: token,\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport default new CourseService();\r\n/*/\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,mCAAmC;AAEnD,MAAMC,aAAa,CAAC;EAClBC,IAAIA,CAACC,KAAK,EAAEC,WAAW,EAAEC,KAAK,EAAE;IAC9B,IAAIC,KAAK;IACT,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAChCF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACF,KAAK;IACxD,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;IAEA,OAAOP,KAAK,CAACG,IAAI,CACfF,OAAO,EACP;MAAEG,KAAK;MAAEC,WAAW;MAAEC;IAAM,CAAC,EAC7B;MACEM,OAAO,EAAE;QACPC,aAAa,EAAEN;MACjB;IACF,CACF,CAAC;EACH;EACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEO,GAAGA,CAACC,GAAG,EAAE;IACP,IAAIR,KAAK;IACT,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MAChCF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACF,KAAK;IACxD,CAAC,MAAM;MACLA,KAAK,GAAG,EAAE;IACZ;IACA,OAAOP,KAAK,CAACc,GAAG,CAACb,OAAO,GAAG,cAAc,GAAGc,GAAG,EAAE;MAC/CH,OAAO,EAAE;QACPC,aAAa,EAAEN;MACjB;IACF,CAAC,CAAC;EACJ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAIL,aAAa,CAAC,CAAC;;AAGlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}